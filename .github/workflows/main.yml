name: Build Executables

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    strategy:
      matrix:
        os: [macos-latest]
        arch: [amd64, 386]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.4

    - name: Install Homebrew
      if: matrix.os == 'macos-latest'
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> $HOME/.zprofile
        eval "$(/opt/homebrew/bin/brew shellenv)"

    - name: Install Chocolatey
      if: matrix.os == 'windows-latest'
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; `
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; `
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

    - name: Install GLFW
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y libglfw3-dev

    - name: Install GLFW
      if: matrix.os == 'macos-latest'
      run: brew install glfw

    - name: Install GLFW
      if: matrix.os == 'windows-latest'
      run: |
        choco install glfw

    - name: Build
      run: |
        GOOS=$(echo ${{ matrix.os }})
        GOARCH=${{ matrix.arch }}
        OUTPUT_NAME=shimoExporter-${GOOS}-${GOARCH}
        export CGO_ENABLED=1 && go mod init shimoExporter && go mod tidy && go build -o $OUTPUT_NAME ./app/main.go

    - name: Code Sign (macOS)
      if: matrix.os == 'macos-latest'
      env:
        CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
      run: |
        echo "$CERTIFICATE" | base64 --decode > /tmp/certificate.p12
        security create-keychain -p "" build.keychain
        security import /tmp/certificate.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain
        codesign --keychain build.keychain --sign "Developer ID Application: Your Name (Team ID)" $OUTPUT_NAME

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: shimoExporter-${{ matrix.os }}-${{ matrix.arch }}
        asset_name: shimoExporter-${{ matrix.os }}-${{ matrix.arch }}
        asset_content_type: application/octet-stream

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-${{ matrix.arch }}
        path: shimoExporter-${{ matrix.os }}-${{ matrix.arch}} 
